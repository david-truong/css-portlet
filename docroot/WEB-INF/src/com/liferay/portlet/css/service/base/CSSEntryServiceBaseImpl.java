/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.css.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.base.PrincipalBean;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.css.service.CSSEntryLocalService;
import com.liferay.portlet.css.service.CSSEntryService;
import com.liferay.portlet.css.service.persistence.CSSEntryFinder;
import com.liferay.portlet.css.service.persistence.CSSEntryPersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the c s s entry remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.portlet.css.service.impl.CSSEntryServiceImpl}.
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.portlet.css.service.impl.CSSEntryServiceImpl
 * @see com.liferay.portlet.css.service.CSSEntryServiceUtil
 * @generated
 */
public abstract class CSSEntryServiceBaseImpl extends PrincipalBean
	implements CSSEntryService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.portlet.css.service.CSSEntryServiceUtil} to access the c s s entry remote service.
	 */

	/**
	 * Gets the c s s entry local service.
	 *
	 * @return the c s s entry local service
	 */
	public CSSEntryLocalService getCSSEntryLocalService() {
		return cssEntryLocalService;
	}

	/**
	 * Sets the c s s entry local service.
	 *
	 * @param cssEntryLocalService the c s s entry local service
	 */
	public void setCSSEntryLocalService(
		CSSEntryLocalService cssEntryLocalService) {
		this.cssEntryLocalService = cssEntryLocalService;
	}

	/**
	 * Gets the c s s entry remote service.
	 *
	 * @return the c s s entry remote service
	 */
	public CSSEntryService getCSSEntryService() {
		return cssEntryService;
	}

	/**
	 * Sets the c s s entry remote service.
	 *
	 * @param cssEntryService the c s s entry remote service
	 */
	public void setCSSEntryService(CSSEntryService cssEntryService) {
		this.cssEntryService = cssEntryService;
	}

	/**
	 * Gets the c s s entry persistence.
	 *
	 * @return the c s s entry persistence
	 */
	public CSSEntryPersistence getCSSEntryPersistence() {
		return cssEntryPersistence;
	}

	/**
	 * Sets the c s s entry persistence.
	 *
	 * @param cssEntryPersistence the c s s entry persistence
	 */
	public void setCSSEntryPersistence(CSSEntryPersistence cssEntryPersistence) {
		this.cssEntryPersistence = cssEntryPersistence;
	}

	/**
	 * Gets the c s s entry finder.
	 *
	 * @return the c s s entry finder
	 */
	public CSSEntryFinder getCSSEntryFinder() {
		return cssEntryFinder;
	}

	/**
	 * Sets the c s s entry finder.
	 *
	 * @param cssEntryFinder the c s s entry finder
	 */
	public void setCSSEntryFinder(CSSEntryFinder cssEntryFinder) {
		this.cssEntryFinder = cssEntryFinder;
	}

	/**
	 * Gets the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Gets the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Gets the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Gets the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Gets the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Gets the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Gets the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query to perform
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = cssEntryPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = CSSEntryLocalService.class)
	protected CSSEntryLocalService cssEntryLocalService;
	@BeanReference(type = CSSEntryService.class)
	protected CSSEntryService cssEntryService;
	@BeanReference(type = CSSEntryPersistence.class)
	protected CSSEntryPersistence cssEntryPersistence;
	@BeanReference(type = CSSEntryFinder.class)
	protected CSSEntryFinder cssEntryFinder;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}